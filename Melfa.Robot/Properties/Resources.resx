<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error.0001.Cause" xml:space="preserve">
    <value>The system may be abnormal</value>
  </data>
  <data name="Error.0001.Level" xml:space="preserve">
    <value>High</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.0001.Measures" xml:space="preserve">
    <value>Turn the power OFF and ON again. If it comes back, contact your service provider.</value>
  </data>
  <data name="Error.0001.Message" xml:space="preserve">
    <value>Fail safe error (SRVOFF)</value>
  </data>
  <data name="Error.0002.Cause" xml:space="preserve">
    <value>The system may be abnormal</value>
  </data>
  <data name="Error.0002.Level" xml:space="preserve">
    <value>High</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.0002.Measures" xml:space="preserve">
    <value>Turn the power OFF and ON again. If it comes back, contact your service provider.</value>
  </data>
  <data name="Error.0002.Message" xml:space="preserve">
    <value>Fail safe error (STOP)</value>
  </data>
  <data name="Error.0003.Cause" xml:space="preserve">
    <value>The problem of the system is the cause</value>
  </data>
  <data name="Error.0003.Level" xml:space="preserve">
    <value>High</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.0003.Measures" xml:space="preserve">
    <value>Turn the power OFF and ON again. If it comes back, contact your service provider.</value>
  </data>
  <data name="Error.0003.Message" xml:space="preserve">
    <value>The system is abnormal</value>
  </data>
  <data name="Error.0004.Cause" xml:space="preserve">
    <value>CPU was not normally treatable</value>
  </data>
  <data name="Error.0004.Level" xml:space="preserve">
    <value>High</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.0004.Measures" xml:space="preserve">
    <value>It is necessary to change some parts when not improving. If it comes back, contact your service provider.
The "CPU" part in each message varies according to the CPU in which an error is detected.
RCPU_main, CCPU_main, RCPU_sub, CCPU_sub, CPU_main, CPU_sub, FPGA, RCPU_PLD, CCPU_PLD</value>
  </data>
  <data name="Error.0004.Message" xml:space="preserve">
    <value>CPU watchdog error</value>
  </data>
  <data name="Error.0050.Cause" xml:space="preserve">
    <value>The external emergency stop is triggered</value>
  </data>
  <data name="Error.0050.Level" xml:space="preserve">
    <value>High</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.0050.Measures" xml:space="preserve">
    <value>Release the external emergen stop signal</value>
  </data>
  <data name="Error.0050.Message" xml:space="preserve">
    <value>Emergency Stop (External)</value>
  </data>
  <data name="Error.0051.Cause" xml:space="preserve">
    <value>Wiring of the external emergency stop is abnormal</value>
  </data>
  <data name="Error.0051.Level" xml:space="preserve">
    <value>High</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.0051.Measures" xml:space="preserve">
    <value>Turn OFF the power supply.
Confirm whether there is any problem in wiring of the external emergency stop switch.
And, please confirm whether it is wiring of the dual line. Refer to the “Examples of safety measures” given in separate “Standard Specifications Manual” for external emergency stop switch wiring.
Turn on the power supply again after checking.</value>
  </data>
  <data name="Error.0051.Message" xml:space="preserve">
    <value>External emergency stop wiring abnormal</value>
  </data>
  <data name="Error.0061.Cause" xml:space="preserve">
    <value>The emergency stop line on the operation panel isn't stable</value>
  </data>
  <data name="Error.0061.Level" xml:space="preserve">
    <value>High</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.0061.Measures" xml:space="preserve">
    <value>Confirm whether there is any problem in wiring of the emergency stop switch on the operation panel.
And, please confirm whether it is wiring of the double line. Refer to the "Examples of safety measures" given in separate "Standard Specifications Manual" for emergency stop switch wiring.
Turn on the power supply again after checking.</value>
  </data>
  <data name="Error.0061.Message" xml:space="preserve">
    <value>Emergency Stop (Operation Panel)</value>
  </data>
  <data name="Error.0070.Cause" xml:space="preserve">
    <value>EMG signal is input. (T.Box) Or when using the UL specification, the brake release switch is turning ON.</value>
  </data>
  <data name="Error.0070.Level" xml:space="preserve">
    <value>High</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.0070.Measures" xml:space="preserve">
    <value>Cancel the T/B emergency stop. Check the emergency stop switch of teaching pendant.. Or when using the UL specification, turn OFF the brake release switch. If the alarm cannot be canceled, check the fuse of the safe unit (TZ348). If the fuse broke off, exchange new fuse.</value>
  </data>
  <data name="Error.0070.Message" xml:space="preserve">
    <value>Emergency Stop (Teach Box)</value>
  </data>
  <data name="Error.0071.Cause" xml:space="preserve">
    <value>The emergency stop signal on the teach box isn't stable</value>
  </data>
  <data name="Error.0071.Level" xml:space="preserve">
    <value>High</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.0071.Measures" xml:space="preserve">
    <value>Confirm whether there is any problem in wiring of the emergency stop switch on the teach box.
And, please confirm whether it is wiring of the double line. Refer to the "Examples of safety measures" given in separate "Standard Specifications Manual" for external emergency stop switch wiring.
Turn on the power supply again after checking.</value>
  </data>
  <data name="Error.0071.Message" xml:space="preserve">
    <value>Emergency Stop signal unstable (Teach Box)</value>
  </data>
  <data name="Error.2000.Cause" xml:space="preserve">
    <value>Because servo is turned off, the robot can't move.</value>
  </data>
  <data name="Error.2000.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.2000.Measures" xml:space="preserve">
    <value>Tur the servo ON and then restart.</value>
  </data>
  <data name="Error.2000.Message" xml:space="preserve">
    <value>The servo is OFF</value>
  </data>
  <data name="Error.2601.Cause" xml:space="preserve">
    <value>The start position is outside the operation range.</value>
  </data>
  <data name="Error.2601.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.2601.Measures" xml:space="preserve">
    <value>Adjust the position</value>
  </data>
  <data name="Error.2601.Message" xml:space="preserve">
    <value>Start position exceeds the limit</value>
  </data>
  <data name="Error.2602.Cause" xml:space="preserve">
    <value>The target position is outside the operation range.</value>
  </data>
  <data name="Error.2602.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.2602.Measures" xml:space="preserve">
    <value>Adjust the position</value>
  </data>
  <data name="Error.2602.Message" xml:space="preserve">
    <value>Destination position exceeds the limit</value>
  </data>
  <data name="Error.2603.Cause" xml:space="preserve">
    <value>The intermediate position is outside the operation range.</value>
  </data>
  <data name="Error.2603.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.2603.Measures" xml:space="preserve">
    <value>Adjust the position</value>
  </data>
  <data name="Error.2603.Message" xml:space="preserve">
    <value>Middle position exceeds the limit</value>
  </data>
  <data name="Error.2800.Cause" xml:space="preserve">
    <value>This may occur for a position to which the robot cannot reach.</value>
  </data>
  <data name="Error.2800.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.2800.Measures" xml:space="preserve">
    <value>Adjust the position</value>
  </data>
  <data name="Error.2800.Message" xml:space="preserve">
    <value>Illegal position data</value>
  </data>
  <data name="Error.2801.Cause" xml:space="preserve">
    <value>This may occur for a starting position to which the robot cannot reach.</value>
  </data>
  <data name="Error.2801.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.2801.Measures" xml:space="preserve">
    <value>Adjust the position</value>
  </data>
  <data name="Error.2801.Message" xml:space="preserve">
    <value>Illegal start position data</value>
  </data>
  <data name="Error.2802.Cause" xml:space="preserve">
    <value>This may occur for a destination position to which the robot cannot reach.</value>
  </data>
  <data name="Error.2802.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.2802.Measures" xml:space="preserve">
    <value>Adjust the position</value>
  </data>
  <data name="Error.2802.Message" xml:space="preserve">
    <value>Illegal destination position data</value>
  </data>
  <data name="Error.2810.Cause" xml:space="preserve">
    <value>The structure flag of the start point and end point don't match</value>
  </data>
  <data name="Error.2810.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.2810.Measures" xml:space="preserve">
    <value>Adjust the position data</value>
  </data>
  <data name="Error.2810.Message" xml:space="preserve">
    <value>Posture flag is disagree</value>
  </data>
  <data name="Error.5600.Cause" xml:space="preserve">
    <value>Cannot execute during an error</value>
  </data>
  <data name="Error.5600.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.5600.Measures" xml:space="preserve">
    <value>Reset the error</value>
  </data>
  <data name="Error.5600.Message" xml:space="preserve">
    <value>Cannot execute during an error</value>
  </data>
  <data name="Error.5610.Cause" xml:space="preserve">
    <value>Cannot execute during stop singal input</value>
  </data>
  <data name="Error.5610.Level" xml:space="preserve">
    <value>Caution</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.5610.Measures" xml:space="preserve">
    <value>Turn the stop signal OFF and execute</value>
  </data>
  <data name="Error.5610.Message" xml:space="preserve">
    <value>Cannot execute during STOP ON</value>
  </data>
  <data name="Error.5620.Cause" xml:space="preserve">
    <value>Cannot execute during cycle stop signal input</value>
  </data>
  <data name="Error.5620.Level" xml:space="preserve">
    <value>Caution</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.5620.Measures" xml:space="preserve">
    <value>Turn the cycle stop signal OFF</value>
  </data>
  <data name="Error.5620.Message" xml:space="preserve">
    <value>Cannot execute during CSTOP ON</value>
  </data>
  <data name="Error.5630.Cause" xml:space="preserve">
    <value>Cannot execute during servo OFF signal input</value>
  </data>
  <data name="Error.5630.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.5630.Measures" xml:space="preserve">
    <value>Turn the servo off signal OFF</value>
  </data>
  <data name="Error.5630.Message" xml:space="preserve">
    <value>Cannot execute during SRVOFF ON</value>
  </data>
  <data name="Error.5640.Cause" xml:space="preserve">
    <value>Cannot execute during operation</value>
  </data>
  <data name="Error.5640.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.5640.Measures" xml:space="preserve">
    <value>Stop the opration, and then execute.</value>
  </data>
  <data name="Error.5640.Message" xml:space="preserve">
    <value>Cannot execute during RUN</value>
  </data>
  <data name="Error.6020.Cause" xml:space="preserve">
    <value>The operation right have not been acquired.</value>
  </data>
  <data name="Error.6020.Level" xml:space="preserve">
    <value>Low</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.6020.Measures" xml:space="preserve">
    <value>Acquire the operation rights.</value>
  </data>
  <data name="Error.6020.Message" xml:space="preserve">
    <value>The operation is disabled</value>
  </data>
  <data name="Error.Unknown.Cause" xml:space="preserve">
    <value>Unknown error, check controller troubleshooting manual (BFP-A3480) for more information.</value>
  </data>
  <data name="Error.Unknown.Level" xml:space="preserve">
    <value>Unknown</value>
    <comment>@Invariant</comment>
  </data>
  <data name="Error.Unknown.Measures" xml:space="preserve">
    <value>Unknown error, check controller troubleshooting manual (BFP-A3480) for more information.</value>
  </data>
  <data name="Error.Unknown.Message" xml:space="preserve">
    <value>Unknown error, check controller troubleshooting manual (BFP-A3480) for more information.</value>
  </data>
</root>